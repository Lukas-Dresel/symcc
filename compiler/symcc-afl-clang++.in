#!/bin/bash

# This file is part of SymCC.
#
# SymCC is free software: you can redistribute it and/or modify it under the
# terms of the GNU General Public License as published by the Free Software
# Foundation, either version 3 of the License, or (at your option) any later
# version.
#
# SymCC is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
# A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with
# SymCC. If not, see <https://www.gnu.org/licenses/>.


AFL_DIR="${SYMCC_AFL_DIR:-@AFL_DIR@}"
pass="${AFL_DIR}/SanitizerCoveragePCGUARD.so"
compiler_rt="${AFL_DIR}/afl-compiler-rt.o"
compiler="${AFLCC_CLANGPP:-@CLANGPP_BINARY@}"

libcxx_var=AFLCC_LIBCXX_PATH

if [[ -v AFLCC_REGULAR_LIBCXX ]]; then
    stdlib_cflags=
    stdlib_ldflags=
elif [[ ! -v $libcxx_var ]]; then
    >&2 echo "Please set $libcxx_var to the directory containing libc++ or confirm usage of the system library by setting AFLCC_REGULAR_LIBCXX!"
    exit 255
else
    # It is important that the resulting binaries load libstdc++ before libc++;
    # otherwise our backend calls the instrumented library in cases where
    # exported names collide.
    stdlib_cflags="-nostdinc++ -nostdlib++"
    stdlib_cflags="$stdlib_cflags -isystem ${!libcxx_var}/include/c++/v1"
    stdlib_cflags="$stdlib_cflags -isystem ${!libcxx_var}/include/x86_64-unknown-linux-gnu/c++/v1"
    stdlib_ldflags="-L${!libcxx_var}/lib -Wl,-rpath,${!libcxx_var}/lib"
    stdlib_ldflags="$stdlib_ldflags -L${!libcxx_var}/lib/x86_64-unknown-linux-gnu -Wl,-rpath,${!libcxx_var}/lib/x86_64-unknown-linux-gnu"
    stdlib_ldflags="$stdlib_ldflags -lstdc++ -lc++ -stdlib=libc++"
fi

if [ $# -eq 0 ]; then
    echo "Use sym++ as a drop-in replacement for clang++, e.g., sym++ -O2 -o foo foo.cpp" >&2
    exit 1
fi
total_extra_cflags="$stdlib_cflags $SYMCC_EXTRA_CFLAGS"
total_extra_ldflags="$stdlib_ldflags $SYMCC_EXTRA_LDFLAGS"

exec $compiler                                  \
    -fexperimental-new-pass-manager             \
    "-fpass-plugin=${pass}"                     \
     $total_extra_cflags                        \
     "$compiler_rt"                             \
     "$@"                                       \
     $total_extra_ldflags                       \
     -Qunused-arguments
